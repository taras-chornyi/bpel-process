buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
    }
}

plugins {
    id 'java-library'
    id "io.spring.dependency-management" version "1.0.5.RELEASE"
    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.jacobono.jaxb'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.ws:spring-ws-core:3.0.1.RELEASE')

    annotationProcessor('org.projectlombok:lombok:1.18.0')
    implementation('org.projectlombok:lombok:1.18.0')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.ws:spring-ws-test:3.0.1.RELEASE')

    apt "org.projectlombok:lombok:1.18.0"

    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7'
    jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-ant:0.6.5"
    jaxb "org.jvnet.jaxb2_commons:jaxb2-basics:0.6.4"
    jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-annotate:0.6.5"
}

jaxb {
    xsdDir = "${xjcRootDir}/src/main/resources/xsd"
    xjc {
        destinationDir     = "src/main/java"
        taskClassname      = "org.jvnet.jaxb2_commons.xjc.XJC2Task"
        generatePackage    = "com.taras.chornyi.bpel.connectors.domain"
        args               = ["-Xinheritance", "-Xannotate"]
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.BUILD-SNAPSHOT"
    }
}

repositories {
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

clean {
    delete 'out'
    delete 'build'
    delete '../schema'
}

build.dependsOn(xjc)
tasks.findByName('xjc').mustRunAfter 'clean'
tasks.findByName('build').mustRunAfter 'xjc'
